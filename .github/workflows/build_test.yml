name: "CI: Build Test"

on: [push, pull_request]

env:
  QT_VERSION: 5.15.2

jobs:
  build:
    name: "${{ matrix.config.os }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            binary: Release/cpeditor.exe
          - os: ubuntu-latest
            binary: cpeditor
          - os: macos-latest
            binary: cpeditor.app/Contents/MacOS/cpeditor

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Restore Qt from cache
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: Qt-${{ matrix.config.os }}-${{ env.QT_VERSION }}

      - name: Set up Qt environment
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: ${{ env.QT_VERSION }}

      - name: "[Linux] Download clang-tidy"
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install clang-tidy-9
          sudo ln -s "$(which clang-tidy-9)" "/usr/local/bin/clang-tidy"

      - name: "[macOS] Download clang-tidy"
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install llvm
          ln -s "$(brew --prefix llvm)/bin/clang-tidy" "/usr/local/bin/clang-tidy"

      - name: "[Unix] Build"
        if: startsWith(matrix.config.os, 'ubuntu') || startsWith(matrix.config.os, 'macos')
        run: |
          cmake -B build -S . -D USE_CLANG_TIDY=On -D CMAKE_BUILD_TYPE=Release
          cmake --build build -j4

      - name: "[Windows] Build"
        if: startsWith(matrix.config.os, 'windows')
        run: |
          cmake -B build -S . -D USE_CLANG_TIDY=On
          cmake --build build -j4 --config Release

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: "cpeditor-${{ matrix.config.os }}-${{ github.run_id }}"
          path: build/${{ matrix.config.binary }}
