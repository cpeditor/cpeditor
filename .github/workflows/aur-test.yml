name: AUR Build Test

on:
  - pull_request

jobs:
  build:
    name: makepkg ${{ matrix.pkg.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - path: dist/aur/stable
            name: cpeditor
          - path: dist/aur/git
            name: cpeditor-git
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update Stable
        if: matrix.pkg.name == 'cpeditor'
        run: |
          shopt -s extglob # enable "!(...)"
          mv .git/objects/pack .
          git unpack-objects < pack/*.pack
          rm -rf pack .git/objects/!($(git rev-parse @ | cut -c-2)) .git/objects/$(git rev-parse @ | cut -c-2)/!($(git rev-parse @ | cut -c3-))
          wget https://raw.githubusercontent.com/Kentzo/git-archive-all/master/git_archive_all.py
          python3 git_archive_all.py dist/aur/stable/cpeditor-0.0.0-full-source.tar.gz --extra=.git/HEAD --extra=.git/refs --extra=.git/objects
          cd dist/aur/stable
          sed -i "s/@PROJECT_VERSION@/0.0.0/g" PKGBUILD
          sed -i "s|source=.*|source=(cpeditor-0.0.0-full-source.tar.gz)|g" PKGBUILD

      - name: Update Git
        if: matrix.pkg.name == 'cpeditor-git'
        run: |
          cd dist/aur/git
          sed -i "s|git://github.com/cpeditor/cpeditor.git|git+$(git remote get-url origin)#commit=${{ github.event.pull_request.head.sha }}|g" PKGBUILD
          sed -i "s/@PROJECT_VERSION@/$(git describe --long --tags --abbrev=8 | sed 's/\([^-]*-g\)/r\1/;s/-/./g')/g" PKGBUILD

      - name: Build Package
        uses: ouuan/pkgbuild-action@master
        id: build-pkg
        with:
          path: ${{ matrix.pkg.path }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.pkg.name }}-${{ github.run_id }}
          path: ${{ steps.build-pkg.outputs.pkgfile }}
