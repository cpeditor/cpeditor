---
presetMethod:
  pickDefault:
    param:
      pre: QStringList
      rawparam: QVariant
      def: QVariant
    code: const auto &mp = rawparam.toMap()["default"].toMap(); if (mp.contains(pre.back())) return mp[pre.back()]; return def;
  pickParam:
    param:
      pre: QStringList
      param: QVariant
    code: const auto &mp = param.toMap(); if (mp.contains(pre.back())) return mp[pre.back()];
  takeParam:
    param:
      param: QVariant
    code: return param.toMap()["param"];
  pickParamFromParam:
    param:
      pre: QStringList
      param: QVariant
    code: const auto &mp = param.toMap()["param"].toMap(); if (mp.contains(pre.back())) return mp[pre.back()];
  pickTip:
    param:
      pre: QStringList
      rawparam: QVariant
      needtr: bool
      tip: QString
    code: const auto &mp = rawparam.toMap()["tip"].toMap(); if (mp.contains(pre.back())) return mp[pre.back()].toStringList()[needtr]; return tip;
  genByRestrict:
    param:
      rawparam: QVariant
    code: |-
      if (rawparam.toMap()["restrict"].userType() == QMetaType::QStringList) return rawparam.toMap()["restrict"];
      QStringList ret; for (const auto &l : rawparam.toMap()["restrict"].toList()) ret.push_back(l.toStringList()[0]); return ret;
pageInfo:
  Code Edit:
  - Tab Width
  - Cursor Width
  - Auto Indent
  - Wrap Text
  - Auto Complete Parentheses
  - Auto Remove Parentheses
  - Tab Jump Out Parentheses
  - Replace Tabs"
  Language:
  - Default Language
  - ===
  - Language Config
  Appearance:
    General:
    - Locale
    - UI Style
    - Editor Theme
    - Opacity
    - Test Case Maximum Height
    - Show Compile And Run Only
    - Display EOLN In Diff
    - Extra Bottom Margin
    Font:
    - Show Only Monospaced Font
    - Editor Font
    - Test Cases Font
    - Message Logger Font
    - Use Custom Application Font
    - Custom Application Font
  Actions:
    Save:
      - Save Faster
      - Save File On Compilation
      - Save File On Execution
      - Save Tests
    Auto Save:
    - Auto Save
    - Auto Save Interval
    - Auto Save Interval Type
    <U>Detached Execution:
    - Detached Run Terminal Program
    - Detached Run Terminal Arguments
    Save Session:
    - Hot Exit/Enable
    - Hot Exit/Auto Save
    - Hot Exit/Auto Save Interval
    Bind file and problem:
    - Restore Old Problem Url
    - Open Old File For Old Problem Url
    Test Cases:
    - Run On Empty Testcase
    - Check On Testcases With Empty Output
    - Auto Uncheck Accepted Testcases
    Load External File Changes:
    - Auto Load External Changes If No Unsaved Modification
    - Ask For Loading External Changes
  Extensions:
    Code Formatting:
    - Format On Manual Save
    - Format On Auto Save
    - Formatter
    Language Server:
    - LSP
    Competitive Companion:
    - Competitive Companion/Enable
    - Competitive Companion/Open New Tab
    - Competitive Companion/Set Time Limit For Tab
    - Competitive Companion/Connection Port
    - Competitive Companion/Head Comments
    - Competitive Companion/Head Comments Time Format
    - Competitive Companion/Head Comments Powered By CP Editor
    CF Tool:
    - CF/Path
    - CF/Show Toast Messages
  File Path:
    Testcases:
    - Input File Save Path
    - Answer File Save Path
    - Testcases Matching Rules
    Problem URL:
    - Default File Paths For Problem URLs
    Default Paths:
    - Default Path Action
    - Default Path
  Key Bindings:
    - Hotkey/Compile
    - Hotkey/Run
    - Hotkey/Compile Run
    - Hotkey/Format
    - Hotkey/Kill
    - Hotkey/Change View Mode
    - Hotkey/Snippets
  Advanced:
    Update:
    - Check Update
    - Beta
    Limits:
    - Default Time Limit
    - Output Length Limit
    - Output Display Length Limit
    - Message Length Limit
    - HTML Diff Viewer Length Limit
    - Open File Length Limit
    - Display Test Case Length Limit
    Network Proxy:
    - Proxy/Enabled
    - Proxy/Type
    - Proxy/Host Name
    - Proxy/Port
    - Proxy/User
    - Proxy/Password
data:
- name: Tab Width
  type: int
  default: 4
  param:
  - 1
  - 16
  tip: The width of the tab character, or the number of spaces of an indent
  old:
  - tab_stop
- name: Cursor Width
  type: int
  default: 1
  param:
  - 1
  - 10
  tip: The width of the cursor in pixels
- name: Geometry
  type: QRect
  notr: true
- name: Editor Font
  type: QFont
  default: "#[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont);
    font.setStyleHint(QFont::TypeWriter); return font; }()"
  param: true
  tip: The font of the code editor
  old:
  - font
- name: Use Custom Application Font
  type: bool
  tip: Use a custom font for the whole application instead of the default system font.
- name: Custom Application Font
  type: QFont
  default: "#QFontDatabase::systemFont(QFontDatabase::GeneralFont)"
  param: false
  depends:
  - name: Use Custom Application Font
  tip: The custom font for the whole application
- name: Default Language
  type: QString
  default: C++
  ui: QComboBox
  param:
  - C++
  - Java
  - Python
  tip: The default language used when opening new tabs
- name: Formatter
  type: Object
  methods:
    getDefault: genByRestrict
  param:
    restrict:
    - Clang Format
    - YAPF
    noadddel: true
  sub:
  - name: Program
    type: QString
    methods:
      getDefault: pickDefault
      getParam: takeParam
      getTip: pickTip
    param:
      param: "#PathItem::Executable"
      default:
        Clang Format: clang-format
        YAPF: python
      tip:
        Clang Format: |-
          !The path to the clang-format executable file.
        YAPF: |-
          !The program of YAPF. It could be `yapf` (which doesn't need arguments) or `python`
          (which needs `-m yapf` as the arguments).
    ui: PathItem
  - name: Arguments
    type: QString
    methods:
      getDefault: pickDefault
    param:
      default:
        YAPF: -m yapf
    tip: The arguments passed to @1. It should NOT contain "-i".
  - name: Style
    type: QString
    ui: QPlainTextEdit
    methods:
      getDefault: pickDefault
      getTip: pickTip
    param:
      default:
        Clang Format: 'BasedOnStyle: Google'
        YAPF: |-
          [style]
          based_on_style = pep8
      tip:
        Clang Format: |-
          !The Clang Format style options, which are usually saved in a .clang-format configuration file.
          You can learn about it at <https://clang.llvm.org/docs/ClangFormatStyleOptions.html>.
        YAPF: |-
          !The YAPF style options, which are usually saved in a .style.yapf or setup.conf configuration file.
          You can learn about it by running `yapf --style-help`.
- name: Format On Manual Save
  desc: Format code on manual save
  type: bool
  tip: Format the code when saving it manually.
  old:
  - format_on_save
  - auto_format
  - clang_format/format_on_manual_save
- name: Format On Auto Save
  desc: Format code on auto-save
  type: bool
  tip: Format the code when auto-saving it.
  old:
  - clang_format/format_on_auto_save
- name: Editor Theme
  type: QString
  default: Light
  ui: QComboBox
  param:
  - Light
  - Dracula
  - Monokai
  - Solarized
  - Solarized Dark
  tip: The syntax highlight theme of the code editor
- name: Detached Run Terminal Program
  desc: Terminal Program
  type: QString
  default: xterm
  tip: |-
    The terminal emulator to use when running in detached mode.
    This is usually the name or the path of the terminal emulator.
    Some possible values are konsole, gnome-terminal, xfce-terminal, xterm or any other terminal emulator program.
- name: Detached Run Terminal Arguments
  desc: Terminal Arguments
  type: QString
  default: "-e"
  tip: |-
    Arguments used to execute a given command in the terminal emulator.
    This is "-e" for most terminal emulators, including konsole, xterm, xfce-terminal but can be "--" for gnome-terminal.
    Consult your terminal emulator for the suitable arguments.
- name: Auto Complete Parentheses
  type: bool
  default: true
  tip: |-
    Automatically complete a pair of parentheses when typing the left element of it,
    and move out of it when typing the right element of it.
    This can be overridden for each parenthesis in each language.
  old:
  - auto_parenthesis
- name: Auto Remove Parentheses
  type: bool
  default: true
  tip: |-
    Automatically delete the whole pair of parentheses when deleting
    the left element of it if the two elements are adjacent.
    This can be overridden for each parenthesis in each language.
- name: Tab Jump Out Parentheses
  desc: Jump out of a parenthesis by pressing Tab
  type: bool
  tip: |-
    When this is enabled, you can use Tab instead of the
    closing parenthesis to jump out of a parenthesis.
    This can be overridden for each parenthesis in each language.
- name: Auto Indent
  type: bool
  default: true
  tip: Add an indent when entering a new line after a "{".
- name: Auto Save
  desc: Enable Auto Save
  type: bool
  tip: Automatically save the file every 3 seconds.
  old:
  - autosave
- name: Auto Save Interval
  desc: Auto Save Interval (ms)
  type: int
  default: 1000
  param:
  - 100
  - 36000000
  - 1000
  depends:
  - name: Auto Save
  tip: The time interval between a modification and an auto-save, or between two auto-saves.
- name: Auto Save Interval Type
  type: QString
  ui: QComboBox
  param:
  - After the last modification
  - After the first modification
  - Without modification
  default: After the last modification
  depends:
  - name: Auto Save
  tip: |-
    After the last modification: the timer will be reset after a modification to the code.
    After the first modification: the timer will start after a modification if at that time the timer is not running.
    Without modification: auto-save happens with a constant interval no matter there are modifications or not.
- name: Wrap Text
  type: bool
  tip: Wrap a line into several lines if it doesn't fit into the screen.
- name: Beta
  desc: Use the beta version
  type: bool
  tip: Check for updates marked as pre-releases, which are considered not very stable
    but have more features.
- name: Replace Tabs
  desc: Replace tabs by spaces
  type: bool
  tip: Use spaces instead of a tab character.
- name: Save Tests
  desc: Save Testcases on Save
  type: bool
  tip: Save the test cases on the disk when saving a file, and load the saved test
    cases when opening a file.
- name: Maximized Window
  type: bool
  notr: true
  old:
  - win_max
- name: Check Update
  desc: Check for updates on startup
  type: bool
  default: true
  tip: Check whether there's a new version of CP Editor when starting CP Editor.
  old:
  - update_start_check
- name: Opacity
  type: int
  default: 100
  param:
  - 60
  - 100
  ui: QSlider
  tip: The opacity of the main window
  old:
  - transparency
- name: View Mode
  type: QString
  default: split
  notr: true
- name: Splitter Size
  type: QByteArray
  notr: true
  old:
  - splitter_sizes
- name: Right Splitter Size
  type: QByteArray
  notr: true
  old:
  - right_splitter_sizes
- name: Competitive Companion/Enable
  desc: Enable Competitive Companion
  type: bool
  default: true
  tip: Receive data sent by Competitive Companion and load the example test cases.
  old:
  - competitive_use
- name: Competitive Companion/Connection Port
  desc: Connection Port
  type: int
  default: 10045
  param:
  - 1024
  - 49151
  depends:
  - name: Competitive Companion/Enable
  tip: The port used to receive data from Competitive Companion
  old:
  - connection_port
- name: Competitive Companion/Open New Tab
  desc: Open New Tabs
  type: bool
  default: true
  depends:
  - name: Competitive Companion/Enable
  tip: Open a new tab for each problem parsed by Competitive Companion.
  old:
  - companion_new_tab
- name: Competitive Companion/Set Time Limit For Tab
  desc: Use the time limit from Competitive Companion
  type: bool
  depends:
  - name: Competitive Companion/Enable
  tip: Use the time limit parsed by Competitive Companion as the time limit of the
    corresponding tab.
- name: Competitive Companion/Head Comments
  desc: Content of the head comments
  type: QString
  ui: QPlainTextEdit
  default: |-
    Problem: ${json.name}
    Contest: ${json.group}
    URL: ${json.url}
    Memory Limit: ${json.memoryLimit} MB
    Time Limit: ${json.timeLimit} ms
  depends:
  - name: Competitive Companion/Enable
  tip: |-
    The comments added at the head of the code when parsing a problem.
    Available place holders are:
    ${time}: the time when parsing the problem
    ${json.X.Y}: an attribute of the data provided by Competitive Companion, you can read more at https://github.com/jmerle/competitive-companion#explanation
- name: Competitive Companion/Head Comments Time Format
  desc: Time format for the head comments
  type: QString
  default: yyyy-MM-dd HH:mm:ss
  depends:
  - name: Competitive Companion/Enable
  tip: |-
    The format of the ${time} place holder in the head comments.
    You can read the Qt documentation for available expressions:
    https://doc.qt.io/qt-5/qdate.html#toString
    https://doc.qt.io/qt-5/qtime.html#toString
- name: Competitive Companion/Head Comments Powered By CP Editor
  desc: Add "Powered By CP Editor" in the head comments
  type: bool
  default: true
  depends:
  - name: Competitive Companion/Enable
  tip: |-
    Add a line saying "Powered By CP Editor" in the head comments.
    This doesn't cost you anything, but helps more people to know CP Editor.
- name: Hotkey/Format
  desc: Format Codes
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_format
- name: Hotkey/Kill
  desc: Kill All Processes
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_kill
- name: Hotkey/Compile Run
  desc: Compile and Run
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_compile_run
- name: Hotkey/Run
  desc: Run Only
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_run
- name: Hotkey/Compile
  desc: Compile Only
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_compile
- name: Hotkey/Change View Mode
  desc: Change View Mode
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_mode_toggle
- name: Hotkey/Snippets
  desc: Use Snippets
  type: QString
  ui: ShortcutItem
  old:
  - hotkey_snippets
- name: Hot Exit/Enable
  desc: Restore last session at startup
  type: bool
  default: true
  tip: |-
    Restore the last session when the application starts.
    When this is enabled, you won't be asked whether to save unsaved files when exiting.
  old:
  - use_hot_exit
- name: Hot Exit/Auto Save
  desc: Auto-save the current session periodically
  type: bool
  depends:
  - name: Hot Exit/Enable
  tip: |-
    Auto-save the current session periodically instead of only save when the application exists.
    This is useful if your computer is frozen and you have to cut off the power or
    kill the application with SIGKILL which could not be handled by the application.
- name: Hot Exit/Auto Save Interval
  desc: Auto-save Session Interval
  type: int
  default: 20000
  param:
  - 1000
  - 36000000
  - 1000
  depends:
  - name: Hot Exit/Enable
  - name: Hot Exit/Auto Save
  tip: The time interval between two auto-saves of the current session.
- name: Force Close
  type: bool
  notr: true
- name: CF/Path
  desc: Path
  type: QString
  default: cf
  ui: PathItem
  param: "#PathItem::Executable"
  tip: The path to the CF Tool executable file
  old:
  - cf_path
- name: CF/Show Toast Messages
  desc: Show toast messages for submission verdicts
  type: bool
  default: true
  tip: Show a toast message when the verdict of a submission is known. You can see
    the message outside of CP Editor.
- name: Show Compile And Run Only
  type: bool
  tip: Hide the Compile Only button and the Run Only button under the code editor
    in the main window.
  old:
  - compile_and_run_only
- name: Display EOLN In Diff
  type: bool
  tip: Use "¶" to represent for the new line character in the HTML Diff Viewer.
- name: Save Faster
  desc: Save Files Faster
  type: bool
  tip: |-
    Always use QFile instead of QSaveFile to save files.
    This will be faster but with a little bit more risk of losing the file (with a very small possibility).
- name: Default Time Limit
  desc: Default Time Limit (ms)
  type: int
  default: 5000
  param:
  - 1
  - 3600000
  - 1000
  tip: |-
    The default time limit when executing the program.
    The program will be killed if it doesn't terminate in the time limit.
  old:
  - time_limit
- name: Output Length Limit
  type: int
  default: 500000
  param:
  - 2
  - 1000000000
  tip: |-
    The maximum number of characters in the output of the program.
    The program will be killed if either of its stdout or stderr is too long.
- name: Output Display Length Limit
  type: int
  default: 50000
  param:
  - 2
  - 100000000
  tip: |-
    The maximum number of characters to be displayed for the output of the program.
    If the output is too long, it will be elided.
- name: Message Length Limit
  type: int
  default: 20000
  param:
  - 500
  - 100000000
  tip: |-
    The maximum number of characters in each message in the top-right corner of the main window.
    The message will be elided if it's too long.
- name: HTML Diff Viewer Length Limit
  type: int
  default: 50000
  param:
  - 2
  - 100000000
  tip: |-
    The maximum number of characters in the HTML Diff Viewer.
    The Diff Viewer will fall back to plain text if either of the output or the expected output is too long.
- name: Open File Length Limit
  type: int
  default: 20000
  param:
  - 2
  - 100000000
  tip: |-
    The maximum number of characters in a source file to open.
    A source file won't be opened if it's too long.
- name: Display Test Case Length Limit
  type: int
  default: 500000
  param:
  - 2
  - 1000000000
  tip: |-
    The maximum number of characters in a test case to be displayed.
    A test case will be elided and read-only if it's too long.
  old:
  - load_test_case_file_length_limit
  - load_test_case_length_limit
- name: LSP
  type: Object
  methods:
    getDefault: genByRestrict
  param:
    restrict:
    - C++
    - Java
    - Python
    noadddel: true
  sub:
  - name: Path
    desc: Path to LSP excutable
    type: QString
    ui: PathItem
    methods:
      getDefault: pickDefault
      getParam: pickParamFromParam
    param:
      param: "#PathItem::Executable"
      default:
        C++: clangd
        Python: python
    depends:
    - name: Use Linting
    tip: The path to the @1 Language Server executable
  - name: Use Linting
    desc: Use Linting with Language Server
    type: bool
    tip: Show Error, Warning, Information and Hints in Code Editor for @1 Language
  - name: Use Autocomplete
    desc: Use auto-complete with Language Server
    type: bool
    tip: Use autocomplete results from Language server
  - name: Delay
    type: int
    desc: Delay in Linting (ms)
    default: 2000
    param:
    - 10
    - 3600000
    - 1000
    depends:
    - name: Use Linting
    tip: Delay in linting in milliseconds after last modification to code
  - name: Args
    type: QString
    desc: Arguments for Language Server
    methods:
      getDefault: pickDefault
    param:
      default:
        Python: -m pyls
    depends:
    - name: Use Linting
    tip: Arguments to pass to Language server executable
- name: Testcases Matching Rules
  type: QVariantList
  default: '#QVariantList { QStringList {"(.*)\\.in
  - \\1.ans"}, QStringList {"(.*)\\.in",
    "\\1.out"}}'
  param:
  - - "*Input Regex"
    - "*The regular expression which matches the whole input file name"
  - - "*Answer Replace"
    - "*The replace expression for the answer file name.\nYou can use \"\\1\"
      for the first captured group."
  tip: |-
    Pairs of regular expressions used when adding pairs of test cases from files.
    Each pair of regular expressions represents a test case.
- name: Input File Save Path
  type: QString
  default: "./${basename}_${1-index}.in"
  tip: |-
    The path where the input files are saved.
    This setting is a relative path to the source file.
    You can use "${filename}" for the complete file name,
    "${basename}" for the base file name without the suffix,
    "${0-index}" for the index of the test case started from 0,
    "${1-index}" for the index of the test case started from 1.
- name: Answer File Save Path
  type: QString
  default: "./${basename}_${1-index}.ans"
  tip: |-
    The path where the answer files are saved.
    This setting is a relative path to the source file.
    You can use "${filename}" for the complete file name,
    "${basename}" for the base file name without the suffix,
    "${0-index}" for the index of the test case started from 0,
    "${1-index}" for the index of the test case started from 1.
- name: Default File Paths For Problem URLs
  type: QVariantList
  default: "#QVariantList {}"
  param:
  - - "*Problem URL"
    - "*The regular expression which matches a part of the problem URL"
  - - "*File Path"
    - "*The replace expression for the file path, without file name suffix.\nYou
      can use \"\\1\" for the first captured group."
  tip: The default file path used when saving a new file while the problem URL is
    set
- name: Test Cases Font
  type: QFont
  default: "#[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont);
    font.setStyleHint(QFont::TypeWriter); return font; }()"
  param: true
  tip: The font of test cases
- name: Extra Bottom Margin
  desc: Add extra margin at the bottom of the code editor
  type: bool
  tip: |-
    Add an extra margin with the height of a page at the bottom of the code editor.
    Due to technical reasons, changing the height of the margin affects the undo history.
- name: Message Logger Font
  type: QFont
  default: "#[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont);
    font.setStyleHint(QFont::TypeWriter); return font; }()"
  param: true
  tip: The font of the message logger
- name: Save File On Compilation
  type: bool
  default: true
  tip: Save the source file when compiling it. It won't be saved if the tab is untitled.
- name: Save File On Execution
  type: bool
  tip: Save the source file when running it. It won't be saved if the tab is untitled.
- name: Restore Old Problem Url
  desc: Restore the problem URL when opening a file
  type: bool
  tip: |-
    If a problem URL was set for a file, when you open
    that file again, the problem URL will be restored.
- name: Open Old File For Old Problem Url
  desc: Open the old file when parsing an old problem URL
  type: bool
  tip: |-
    If a problem URL was set for a file, when parsing that problem
    from Competitive Companion again, the old file will be opened.
- name: Locale
  desc: UI Language
  type: QString
  ui: QComboBox
  default: system
  param:
  - system
  - English
  - Русский
  - 简体中文
  tip: The language displayed in the UI.
  methods:
    onApply:
      param:
        parent: QWidget*
      code: QMessageBox::warning(parent, tr("Change Locale"), tr("You need to restart
        the application to completely apply the locale change."));
- name: UI Style
  type: QString
  ui: QComboBox
  default: default
  param: "#Core::StyleManager::styleList()"
  tip: The style of the whole application.
- name: Language Config
  type: Object
  methods:
    getDefault: genByRestrict
  param:
    restrict:
    - C++
    - Java
    - Python
    noadddel: true
    pass:
      group:
      - name: "*Commands"
        target:
        - Compile Command
        - Compiler Output Codec
        - Output Path
        - Class Name
        - Run Command
        - Run Arguments
      - name: "*Parentheses"
        target:
        - Parentheses
      - name: "*Snippet"
        target:
        - Snippet
      - name: "*Template"
        target:
        - Template Path
        - Template Cursor Position Regex
        - Template Cursor Position Offset Type
        - Template Cursor Position Offset Characters
      hide:
        Compile Command:
        - Python
        Compiler Output Codec:
        - Python
        Output Path:
        - Python
        Run Command:
        - C++
        Class Name:
        - C++
        - Python
  sub:
  - name: Compile Command
    type: QString
    methods:
      getDefault: pickDefault
    param:
      default:
        C++: c++ -Wall
        Java: javac
    tip: The command used to compile @1. It should NOT include the path to the source
      file or any core params.
  - name: Compiler Output Codec
    type: QString
    default: UTF-8
    ui: CodecBox
    tip: Text codec of the compiler output (errors, warnings, etc.)
  - name: Output Path
    desc: Executable File Path
    type: QString
    default: "${tmpdir}/${basename}"
    tip: |-
      The path of the compiled file.
      It's relative to the source file, or the temporary directory if the tab is untitled.
      You can use "${filename}" for the complete file name,
      "${basename}" for the base file name without the suffix,
      "${tmpdir}" or "${tempdir}" for the absolute path of the temporary directory.
  - name: Run Arguments
    type: QString
    tip: The runtime arguments when executing a @1 program.
  - name: Run Command
    type: QString
    methods:
      getDefault: pickDefault
    param:
      default:
        Java: java
        Python: python
    tip: The command to start a @1 program. It should NOT include core params.
  - name: Class Name
    type: QString
    default: Main
    tip: The name of the main class of your solution.
  - name: Template Path
    type: QString
    ui: PathItem
    methods:
      getParam: pickParam
    param:
      C++: "#PathItem::CppSource"
      Java: "#PathItem::JavaSource"
      Python: "#PathItem::PythonSource"
    tip: The template used when creating a new @1 file
  - name: Template Cursor Position Regex
    type: QString
    methods:
      getDefault: pickDefault
    param:
      default:
        C++: main\(\)
    depends:
    - name: Template Path
      check: return !var.toString().isEmpty();
    tip: |-
      The regular expression which matches a part of the code template.
      When opening a template, the position of the cursor is the position of the regex with an offset.
      The cursor will be at the end of the template if there's no match of the regex.
  - name: Template Cursor Position Offset Type
    type: QString
    default: end
    ui: QComboBox
    param:
    - start
    - end
    depends:
    - name: Template Path
      check: return !var.toString().isEmpty();
    tip: Whether the offset is relative to the start of the regex or the end of the
      regex.
  - name: Template Cursor Position Offset Characters
    type: int
    default: 4
    param:
    - -1000000
    - 1000000
    depends:
    - name: Template Path
      check: return !var.toString().isEmpty();
    tip: The offset relative to the match of the regex in the number of characters,
      including white spaces.
  - name: Parentheses
    type: Object
    param:
      check:
      - regex: '@R"(^\S{2}$)"'
        message: '@tr("Parentheses sequence should contains exactly two character.")'
    default:
    - "[]"
    - "()"
    - "{}"
    - '""'
    - "''"
    sub:
    - name: Auto Complete
      type: int
      ui: TristateCheckBox
      default: "#Qt::PartiallyChecked"
      tip: |-
        Enable @0 for @1 in @3.
        If it's partially checked, the global setting in Code Edit will be used.
    - name: Auto Remove
      type: int
      ui: TristateCheckBox
      default: "#Qt::PartiallyChecked"
      tip: |-
        Enable @0 for @1 in @3.
        If it's partially checked, the global setting in Code Edit will be used.
    - name: Tab Jump Out
      type: int
      ui: TristateCheckBox
      default: "#Qt::PartiallyChecked"
      tip: |-
        Enable @0 for @1 in @3.
        If it's partially checked, the global setting in Code Edit will be used.
  - name: Snippet
    type: Object
    methods:
      loadsnippet:
        param:
          widget: MapWrapper*
          valid: bool
        code: return SettingsMethods::loadSnippet(widget, valid);
      extractsnippet:
        param:
          widget: MapWrapper*
          valid: bool
        code: return SettingsMethods::extractSnippet(widget, valid);
    param:
      rename: true
      action:
      - name: "*Load Snippet From File"
        method: loadsnippet
      - name: "*Extract Snippet To File"
        method: extractsnippet
    sub:
    - name: Code
      type: QString
      ui: QPlainTextEdit
- name: Run On Empty Testcase
  desc: Run your codes on empty test cases
  type: bool
  tip: Run your code on all non-hidden test cases even if the input is empty.
- name: Check On Testcases With Empty Output
  desc: Check your answer on test cases with empty output
  type: bool
  tip: Check your answer even if your output or the expected output is empty.
- name: Test Case Maximum Height
  type: int
  default: 300
  param:
  - 30
  - 2000
  tip: The maximum height of a test case without a scrollbar in pixels.
- name: Proxy/Enabled
  desc: Enable Proxy
  type: bool
  default: true
  docAnchor: network-proxy
  tip: Enable proxy for checking updates
- name: Proxy/Type
  desc: Type
  type: QString
  default: System
  ui: QComboBox
  param:
  - System
  - Http
  - Socks5
  depends:
  - name: Proxy/Enabled
  docAnchor: network-proxy
  tip: The type of the proxy. "System" for using the system proxy.
- name: Proxy/Host Name
  desc: Host Name
  type: QString
  default: 127.0.0.1
  depends:
  - name: Proxy/Enabled
  - name: Proxy/Type
    check: return var.toString() != "System";
  docAnchor: network-proxy
  tip: The hostname of the proxy, e.g. 127.0.0.1
- name: Proxy/Port
  desc: Port
  type: int
  default: 1080
  param:
  - 1024
  - 49151
  depends:
  - name: Proxy/Enabled
  - name: Proxy/Type
    check: return var.toString() != "System";
  docAnchor: network-proxy
  tip: The port of the proxy, e.g. 1080
- name: Proxy/User
  desc: User
  type: QString
  depends:
  - name: Proxy/Enabled
  - name: Proxy/Type
    check: return var.toString() != "System";
  docAnchor: network-proxy
  tip: The user of the proxy server. It can be empty if the proxy server doesn't require
    authentication.
- name: Proxy/Password
  desc: Password
  type: QString
  depends:
  - name: Proxy/Enabled
  - name: Proxy/Type
    check: return var.toString() != "System";
  docAnchor: network-proxy
  tip: The password of the proxy server. It can be empty if the proxy server doesn't
    require authentication.
- name: Default Path
  type: Object
  default:
  - file
  - testcase
  - checker
  - contest
  - settings
  - session
  - snippets
  sub:
  - name: Path
    type: QString
  tip: |-
    A list of default paths.
    They can be used in actions' corresponding default paths by using ${<default path name>} as a place holder.
    They can be either manually set or automatically changed after choosing a path for an action.
- name: Default Path Action
  type: Object
  methods:
    getDefault: genByRestrict
  param:
    restrict:
    - "!Open File"
    - "!Save File"
    - "!Open Contest"
    - "!Load Single Test Case"
    - "!Add Pairs Of Test Cases"
    - "!Save Test Case To A File"
    - "!Custom Checker"
    - "!Export And Import Settings"
    - "!Export And Load Session"
    - "!Extract And Load Snippets"
    noadddel: true
  sub:
  - name: Uses
    desc: Default path used for
    type: QString
    methods:
      getDefault: pickDefault
      getTip: pickTip
    param:
      default:
        Open File: ${file}
        Save File: ${file}
        Open Contest: ${contest}
        Load Single Test Case: ${testcase}
        Add Pairs Of Test Cases: ${testcase}
        Save Test Case To A File: ${testcase}
        Custom Checker: ${checker}
        Export And Import Settings: ${settings}
        Export And Load Session: ${session}
        Extract And Load Snippets: ${snippets}
      tip:
        Save File: |-
          !The default path used when choosing a path for @1.
          You can use ${<default path name>} as a place holder.
          It can be overridden by Default File Paths For Problem URLs
    tip: |-
      The default path used when choosing a path for @1.
      You can use ${<default path name>} as a place holder.
  - name: Changes
    desc: Default paths changed by
    type: QString
    methods:
      getDefault: pickDefault
    param:
      default:
        Open File: file, testcase, checker
        Save File: file, testcase, checker
        Open Contest: contest, file, testcase, checker
        Load Single Test Case: testcase
        Add Pairs Of Test Cases: testcase
        Save Test Case To A File: testcase
        Custom Checker: checker
        Export And Import Settings: settings
        Export And Load Session: session
        Extract And Load Snippets: snippets
    tip: |-
      The default paths changed after choosing a path for @1.
      It is a list of <default path name>s, separated by commas, and can be empty.
- name: Auto Load External Changes If No Unsaved Modification
  desc: Auto-load external file changes if there's no unsaved modification
  type: bool
  default: true
  tip: Automatically load file changes that are not made in CP Editor if there's no
    unsaved modification in CP Editor.
- name: Ask For Loading External Changes
  desc: Ask whether to load external file changes
  type: bool
  default: true
  trtip: tr("When there are file changes that are not made in CP Editor and is not
    automatically loaded by\n\"%1\", ask for whether to load the changes.\nIf this
    is disabled, external file changes will be ignored unless they are loaded by\n\"%1\".").arg(tr("Auto-load
    external file changes if there's no unsaved modification"))
- name: Recent Files
  type: QStringList
  notr: true
- name: Number Of Problems In Contest
  type: int
  default: 5
  notr: true
- name: First Time User
  type: bool
  default: true
  notr: true
- name: Show Only Monospaced Font
  type: bool
  default: true
  immediatelyApply: true
  tip: Show only monospaced fonts when choosing a font
- name: Total Usage Time
  type: int
  notr: true
- name: Promotion Dialog Shown
  type: bool
  notr: true
- name: Auto Uncheck Accepted Testcases
  type: bool
  tip: Automatically uncheck test cases when they get accepted.
- name: Full Screen Dialog Shown
  type: bool
  notr: true